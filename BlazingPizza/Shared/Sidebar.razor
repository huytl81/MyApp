@using BlazingPizza.Services
@inject OrderState PizzaOrderState

<div class="sidebar">
    @if (PizzaOrder.Pizzas.Any())
    {
        <div class="order-contents">
            <h2>Your order</h2>

            @foreach (var configuredPizza in PizzaOrder.Pizzas)
            {
              <div class="cart-item">
                  <div class="title">@(configuredPizza.Size)" @configuredPizza.Special.Name</div>
                  <div class="item-price">
                      @configuredPizza.GetFormattedTotalPrice()
                  </div>
                  <a @onclick="() => PizzaOrderState.RemoveConfiguredPizza(configuredPizza)" class="delete-item">x</a>
              </div>
            }
        </div>
    }
    else
    {
        <div class="empty-cart">Choose a pizza<br>to get started</div>
    }

    <div class="order-total @(PizzaOrder.Pizzas.Any() ? "" : "hidden")">
        Total:
        <span class="total-price">@PizzaOrder.GetFormattedTotalPrice()</span>
        <a href="checkout" class="@(PizzaOrderState.PizzaOrder.Pizzas.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
            Order >
        </a>
    </div>
</div>

@code {
        [Parameter]
        public Order PizzaOrder {get; set;}
}
